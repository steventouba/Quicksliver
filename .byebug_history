c
User.where.not(id: params[:current_user_id])
c
params
c
params
c
params
c
n
users
c
@channel
prefix
c
2.hash
1.hash
users.join.hash
users
usrs
users.join
users
c
params[:channel][:name].values
params[:channel][:name]
params[:channel]
params
@channel
c
params[:channel][:name].values
params[:channel][:name]
params[:channel]
channel
params[channel][name]
params[name]
params
params[channel]
[channel]
params
channel
params
params[channel]
channel[name]
channel.name
params
c
params
c
params
c
n
params
c
params
para
c
data
c
data
c
data
c
data
c
params
data
c
n
params
c
data
c
data
c
data
c
params
c
App.subscriptions.subscriptions
App.subscriptions
App
params
c
params
c
socket
n
message
n
message
c
n
params
data
c
n
c
params
c
params
c
params
c
User.find_by(id: params[:user_id]).subscribed_channels
User.find_by(id: params[:user_id])
c
n
c
n
c
params[:user_id] == 'undefined'
params[:user_id] == undefined
!!params[:user_id]
c
params[:user_id]
n
params[:user_id]
c
n
params
c
n
current_user
c
@current_user
n
@current_user
n
c
n
@current_user
c
n
@user
@current_user
n
s
n
@current_user
@user
n
@user
c
n
@current_user
current_user
@user
n
c
@user
current_user
c
current_user
c
current_user
c
n
c
n
current_user
n
@user
n
c
user
n
user
n
s
c
@user
n
s
c
n
@user
params[:user][:email]
params[:user]
params[user]
params
c
@User
current_user
user
params
